{
  "mcpServers": {
    "stdio_mcp": {
      "name": "STDIO MCP",
      "description": "MCP server transporting data via standard input/output",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-weather"]
    },
    "http_mcp": {
      "name": "HTTP MCP",
      "description": "MCP server transporting data via http",
      "transport": "http",
      "url": "http://localhost:4000/mcp",
      "headers": {
        "Authorization": "Bearer your-api-key"
      }
    },
    "secure_http_mcp": {
      "name": "Secure HTTP MCP",
      "description": "MCP server protected with JWT authentication (static token)",
      "transport": "http",
      "url": "https://secure-api.example.com/mcp",
      "auth": {
        "type": "jwt",
        "config": {
          "token": "${MCP_JWT_TOKEN}"
        }
      }
    },
    "oauth_http_mcp": {
      "name": "OAuth2 HTTP MCP",
      "description": "MCP server using OAuth2 client credentials for JWT",
      "transport": "sse",
      "url": "https://enterprise-api.example.com/mcp",
      "auth": {
        "type": "jwt",
        "config": {
          "tokenUrl": "https://auth.example.com/oauth/token",
          "clientId": "${MCP_OAUTH_CLIENT_ID}",
          "clientSecret": "${MCP_OAUTH_CLIENT_SECRET}",
          "audience": "mcp-api",
          "refreshThreshold": 5
        }
      }
    },
    "sse_mcp": {
      "name": "SSE MCP",
      "description": "MCP server using Server-Sent Events for real-time data",
      "transport": "sse",
      "url": "https://sse.example.com/mcp",
      "headers": {
        "Authorization": "Bearer your-api-key"
      }
    },
    "secure_sse_mcp": {
      "name": "Secure SSE MCP",
      "description": "MCP server protected with JWT authentication (static token)",
      "transport": "sse",
      "url": "https://secure-sse.example.com/mcp",
      "auth": {
        "type": "jwt",
        "config": {
          "token": "${MCP_JWT_TOKEN}"
        }
      }
    },
    "secure_oauth_sse_mcp": {
      "name": "OAuth2 Secure SSE MCP",
      "description": "MCP server using OAuth2 client credentials for JWT",
      "transport": "sse",
      "url": "https://secure-sse.example.com/mcp",
      "auth": {
        "type": "jwt",
        "config": {
          "tokenUrl": "https://auth.example.com/oauth/token",
          "clientId": "${MCP_OAUTH_CLIENT_ID}",
          "clientSecret": "${MCP_OAUTH_CLIENT_SECRET}",
          "audience": "mcp-api",
          "refreshThreshold": 5
        }
      }
    }
  },
  "restServers": {
    "basic_rest_api": {
      "name": "Basic REST API",
      "description": "Simple REST API without authentication",
      "url": "http://localhost:5000/api",
      "defaultHeaders": {
        "Content-Type": "application/json"
      },
      "endpoints": {
        "basic_rest_endpoint": {
          "name": "Basic REST API",
            "description": "Basic REST API endpoint",
            "path": "/example/{someId}",
            "method": "GET",
            "query": {
              "type": "object",
              "properties": {
                "someId": {
                  "type": "string",
                  "description": "ID of the resource"
                }
              },
              "required": ["someId"]
            },
            "headers": {
              "X-Custom-Header": "value"
            },
            "payload": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the resource"
                },
                "value": {
                  "type": "number",
                  "description": "Value associated with the resource"
                }
              }
            },
            "response_transform": [
              { "path": "status", "transform": "map", "map": { "0": "Offline", "1": "Online", "2": "Away" } },
              { "path": "last_login", "transform": "date_format", "format": "YYYY-MM-DD HH:mm:ss" },
              { "path": "profile.bio", "transform": "template", "template": "Bio: {value}" },
              { "path": "profile.description", "transform": "regex_replace", "pattern": "\\s+", "replacement": " " },
              { "path": "debug_info", "transform": "remove" }
            ]
        }
      }
    },
    "secure_rest_api": {
      "name": "Secure REST API",
      "description": "REST API with JWT authentication",
      "url": "https://secure-api.example.com/api",
      "auth": {
        "type": "jwt",
        "config": {
          "tokenUrl": "https://auth.example.com/oauth/token",
          "clientId": "${REST_OAUTH_CLIENT_ID}",
          "clientSecret": "${REST_OAUTH_CLIENT_SECRET}",
          "audience": "rest-api",
          "refreshThreshold": 5
        }
      },
      "defaultHeaders": { "Content-Type": "application/json" },
      "endpoints": {}
    },
    "oauth_rest_api": {
      "name": "OAuth2 REST API",
      "description": "REST API using OAuth2 client credentials for JWT",
      "url": "https://oauth-api.example.com/api",
      "auth": {
        "type": "jwt",
        "config": {
          "tokenUrl": "https://auth.example.com/oauth/token",
          "clientId": "${OAUTH_CLIENT_ID}",
          "clientSecret": "${OAUTH_CLIENT_SECRET}",
          "audience": "oauth-api",
          "refreshThreshold": 5
        }
      },
      "defaultHeaders": { "Content-Type": "application/json" },
      "endpoints": {}
    }
  }
}
