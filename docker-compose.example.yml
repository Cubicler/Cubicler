# Docker Compose for testing with example files
services:
  cubicler:
    build: .
    ports:
      - "${CUBICLER_PORT:-1503}:${CUBICLER_PORT:-1503}"
    environment:
      - CUBICLER_PORT=${CUBICLER_PORT:-1503}
      - CUBICLER_STRICT_PARAMS=${CUBICLER_STRICT_PARAMS:-false}
      # Using local example files for testing
      - CUBICLER_SPEC_SOURCE=/app/config/spec.yaml
      - CUBICLER_PROMPT_SOURCE=/app/config/prompt.md
    volumes:
      # Mount the example files for testing
      - ./spec.example.yaml:/app/config/spec.yaml:ro
      - ./prompt.example.md:/app/config/prompt.md:ro
      # Mount logs directory
      - cubicler_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const req = http.request('http://localhost:1503/health', res => process.exit(res.statusCode === 200 ? 0 : 1)); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  cubicler_logs:
