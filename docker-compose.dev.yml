# Docker Compose for development with live reload
services:
  cubicler-dev:
    build: 
      context: .
      target: development
    ports:
      - "${CUBICLER_PORT:-1503}:${CUBICLER_PORT:-1503}"
    environment:
      - NODE_ENV=development
      - CUBICLER_PORT=${CUBICLER_PORT:-1503}
      - CUBICLER_STRICT_PARAMS=${CUBICLER_STRICT_PARAMS:-false}
      
      # Timeout configurations
      - DEFAULT_CALL_TIMEOUT=${DEFAULT_CALL_TIMEOUT:-30000}
      - PROVIDER_CALL_TIMEOUT=${PROVIDER_CALL_TIMEOUT}
      - AGENT_CALL_TIMEOUT=${AGENT_CALL_TIMEOUT}
      
      # New orchestration architecture - using example files
      - CUBICLER_PROVIDERS_LIST=/app/providers.example.json
      - CUBICLER_AGENTS_LIST=/app/agents.example.json
      
      # Cache configuration
      - PROVIDERS_CACHE_ENABLED=${PROVIDERS_CACHE_ENABLED:-true}
      - PROVIDERS_CACHE_TIMEOUT=${PROVIDERS_CACHE_TIMEOUT:-600}
      - AGENTS_CACHE_ENABLED=${AGENTS_CACHE_ENABLED:-true}
      - AGENTS_CACHE_TIMEOUT=${AGENTS_CACHE_TIMEOUT:-600}
    volumes:
      # Mount source code for live development
      - ./src:/app/src:ro
      # Mount example configuration files
      - ./providers.example.json:/app/providers.example.json:ro
      - ./agents.example.json:/app/agents.example.json:ro
      # Mount node_modules as a volume to avoid overwriting
      - /app/node_modules
    command: ["npm", "run", "dev:watch"]
    restart: unless-stopped
