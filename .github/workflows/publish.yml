name: Publish Package

on:
  release:
    types: [published]

jobs:
  publish-docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run typecheck
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm run test:run
      
    - name: Build project
      run: npm run build

    - name: Validate version matches tag
      id: version
      run: |
        PKG_VERSION=$(node -p "require('./package.json').version")
        TAG_VERSION="${GITHUB_REF#refs/tags/v}"
        echo "package=$PKG_VERSION" >> $GITHUB_OUTPUT
        echo "tag=$TAG_VERSION" >> $GITHUB_OUTPUT
        echo "Package.json version: $PKG_VERSION"
        echo "Tag version: $TAG_VERSION"
        if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
          echo "::error::package.json version ($PKG_VERSION) does not match tag ($TAG_VERSION)"
          exit 1
        fi

    - name: Publish to npm
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        npm config set //registry.npmjs.org/:_authToken "$NODE_AUTH_TOKEN"
        npm publish --access public
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract version from tag
      id: docker_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          cubicler/cubicler:latest
          cubicler/cubicler:${{ steps.docker_version.outputs.VERSION }}
        platforms: linux/amd64,linux/arm64
